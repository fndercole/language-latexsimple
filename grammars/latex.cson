fileTypes: [
  'tex'
]
name: 'LaTeX'
firstLineMatch: '(.*)'
patterns: [
  { # Include R Source Code. TODO: Generalize for any scope.
    begin: '(% )(language: R)'
    end: '(% end)'
    name: 'meta.verbatim.multiline.latex'
    beginCaptures:
      '2':
        name: 'markup.bold'
    patterns: [
      {
        match: '(\\\\(?:begin|end)\\{\\w+\\})'
        name: 'inline.comment.latex'
      }
      {
        include: 'source.r'
      }
    ]
  }
  { # Generic Inline Comments
    include: '#inlineComments'
  }
  { # Escaped characters. TODO: Add more symbols.
    include: '#escapedChar'
  }
  { # Lengths: number + unit
    match: '((?:\\d+\\.)?\\d+)(pt|px|ex|em|in|mm|cm)'
    captures:
      '1':
        name: 'constant.numeric.latex'
      '2':
        name: 'constant.keyword.unit.latex'
  }
  { # Inline maths
    begin: '(\\$)'
    end: '(\\$)'
    name: 'inline.math.latex'
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.inline.math.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.inline.math.end.latex'
    patterns: [
      {
        include: '#escapedChar'
      }
      {
        include: '#inlineComments'
      }
      {
        include: '#command'
      }
    ]
  }
  { # Display maths
    begin: '(\\\\\\[)'
    end: '(\\\\\\])'
    name: 'display.math.latex'
    patterns: [
      {
        include: '#escapedChar'
      }
      {
        include: '#inlineComments'
      }
      {
        include: '#command'
      }
    ]
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.display.math.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.display.math.end.latex'
  }
  { # documentclass Declaration
    begin: '(\\\\documentclass)'
    end: '(\\{)([^\\}]*)(\\})'
    name: 'meta.class.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.arguments.begin.latex'
      '2':
        name: 'entity.name.class.latex'
      '3':
        name: 'punctuation.definition.class.arguments.end.latex'
    patterns: [
      {
        include: '#optionalArguments'
      }
    ]
  }
  { # Includes\Require Declaration. TODO: Add listings includes.
    begin: '(\\\\(?:usepackage|includegraphics|include|input|nobibliography|bibliography))'
    end: '(\\{)([^\\}]*)(\\})'
    name: 'meta.require.include.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.require.begin.latex'
      '2':
        name: 'entity.meta.link.latex'
      '3':
        name: 'punctuation.definition.require.end.latex'
    patterns: [
      {
        include: '#optionalArguments'
      }
    ]
  }
  { # Headings
    # TODO: Add support for subsubsectioning and subparagraphs
    begin: '(\\\\(?:title|part|chapter|section|subsection|paragraph))(?=\\W)'
    end: '(\\{)([^\\}]*)(\\})'
    beginCaptures:
      '1':
        name: 'support.function.section.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.section.arguments.begin.latex'
      '2':
        name: 'entity.name.section.latex'
      '3':
        name: 'punctuation.support.function.section.arguments.end.latex'
    patterns: [
      {
        include: '#optionalArguments'
      }
    ]
  }
  { # Commands that disable spell cheking. One argument.
    # TODO: foreignlanguage
    # TODO: optionalarguments
    begin: '(?<=\\\\author|\\\\alph|\\\\Alph|\\\\bibentry|\\\\cite|\\\\color|\\\\label|\\\\newcounter|\\\\ref|\\\\setcounter|\\\\url)(\\{)'
    end: '(\\})'
    contentName: 'variable.parameter.function.latex'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
  }
  { # Commands that disable spell cheking. envieroment arguments
    # TODO: foreignlanguage
    # TODO: optionalarguments
    begin: '(?<=\\\\begin\\{tabular\\})(\\{)'
    end: '(\\})'
    contentName: 'variable.parameter.function.latex'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
  }
  { # Multiline comments
    begin: '(\\\\begin\\{(?:comment)\\})'
    end: '(\\\\end\\{(?:comment)\\})'
    name: 'comment.multiline.latex'
  }
  { # Inline verbatims
    begin: '(\\\\verb)(\\W)'
    end: '(\\2)'
    name: 'meta.verbatim.inline.latex'
  }
  { # Multiline verbatim. TODO: Add support for other verbatim like enivironments.
    begin: '(\\\\begin\\{(?:verbatim)\\})'
    end: '(\\\\end\\{(?:verbatim)\\})'
    name: 'meta.verbatim.multiline.latex'
  }
  { # Environments opening and closing
    begin: '(\\\\(?:begin|end))'
    end: '(\\{)([^\\}]*)(\\})'
    beginCaptures:
      '1':
        name: 'support.function.environment.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.environment.arguments.begin.latex'
      '2':
        name: 'entity.name.environment.latex'
      '3':
        name: 'punctuation.support.function.environment.arguments.end.latex'
    patterns: [
      {
        include: '#optionalArguments'
      }
    ]
  }
  { # Generic commands
    include: '#command'
  }
  {
    include: '#optionalArguments'
  }
  {
    name: 'punctuation.support.function.arguments.begin.latex'
    match: '(\\{)'
  }
  {
    name: 'punctuation.support.function.arguments.end.latex'
    match: '(\\})'
  }
  {
    name: 'punctuation.definition.array.latex'
    match: '([&-])'
  }
]
repository:
  escapedChar:
    name: 'constant.character.escape.latex'
    match: '(\\\\)([%\\$\\{\\}\\\\])'
    # TODO: Add more symbols.
  inlineComments:
    name: 'comment.inline.latex'
    begin: '(%)'
    end: '(\\n)'
    beginCaptures:
      '1':
        name: 'punctuation.definition.comment.latex'
    patterns: [
      {
        include: 'text.todo'
      }
    ]
  optionalArguments:
    begin: '(\\[)'
    end: '(\\])'
    name: 'optional.arguments.latex'
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.optional.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.optional.arguments.end.latex'
    patterns: [
      {
        include: '#inlineComments'
      }
      {
        include: '#argsKeyName'
      }
      {
        include: '#argsName'
      }
      {
        match: '(,)'
        name: 'punctuation.definition.class.optional.arguments.latex'
      }
    ]
  argsKeyName:
    name: 'support.type.latex'
    match: '([a-zA-Z0-9]+(\\s)?=(\\s)?)'
  argsName:
    name: 'entity.name.class.latex'
    match: '([a-zA-Z0-9]+)'
  command:
    match: '(\\\\[a-zA-Z]+)'
    name: 'support.function.latex'
scopeName: 'text.tex.latex'
