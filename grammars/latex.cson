fileTypes: [
  'tex'
  'cls'
  'sty'
]
name: 'LaTeX'
patterns: [
  {# Include R, and Shell Source Code. TODO: Generalize for any scope.
    begin: '(% )(?=language:)'
    end: '(% end)'
    name: 'meta.verbatim.multiline.latex'
    patterns: [
      {
        match: '(language:)'
        name: 'storage.latex'
      }
      {
        begin: '(?<=language: )(R)'
        end: '(?=% end)'
        patterns: [
          {
            include: 'source.r'
          }
        ]
      }
      {
        begin: '(?<=language: )(stata)'
        end: '(?=% end)'
        patterns: [
          {
            include: 'source.stata'
          }
        ]
      }
      {
        begin: '(?<=language: )(sh)'
        end: '(?=% end)'
        patterns: [
          {
            include: 'source.shell'
          }
        ]
      }
      {
        include: '$self'
      }
    ]
  }
  {
    begin: '(% )(disable spell)'
    beginCaptures:
      '1':
        name: 'comment.inline.latex'
      '2':
        name: 'storage.latex'
    end: '(% )(enable spell)'
    endCaptures:
      '1':
        name: 'comment.inline.latex'
      '2':
        name: 'storage.latex'
    name: 'disablespellchecking.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Generic Inline Comments
    include: '#inlineComments'
  }
  {# Lengths digits + units
    include: '#lengths'
  }
  {# Escaped characters. TODO: Add more symbols.
    include: '#escapedChar'
  }
  {# Inline maths
    begin: '(\\$)'
    end: '(\\$)'
    name: 'inline.math.latex'
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.inline.math.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.inline.math.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Display maths
    begin: '(\\\\\\[)'
    end: '(\\\\\\])'
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.display.math.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.display.math.latex'
    name: 'display.math.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Math environment
    begin: '(\\\\begin)(\\{)((?:align|equation)(?:\\*)?)(\\})'
    end: '(\\\\end)(\\{)(\\3)(\\})'
    contentName: 'display.math.latex'
    beginCaptures:
      '1':
        name: 'support.function.environment.latex'
      '2':
        name: 'punctuation.support.function.environment.arguments.begin.latex'
      '3':
        name: 'entity.name.environment.latex'
      '4':
        name: 'punctuation.support.function.environment.arguments.end.latex'
    endCaptures:
      '1':
        name: 'support.function.environment.latex'
      '2':
        name: 'punctuation.support.function.environment.arguments.begin.latex'
      '3':
        name: 'entity.name.environment.latex'
      '4':
        name: 'punctuation.support.function.environment.arguments.end.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Math environment \left( \right)
    begin: '(\\\\left(\\\\{|\\[|\\(|\\.))'
    end: '(\\\\right(\\\\{|\\]|\\)|\\.))'
    beginCaptures:
      '1':
        name: 'support.function.environment.latex'
    endCaptures:
      '1':
        name: 'support.function.environment.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# documentclass Declaration
    begin: '(\\\\documentclass)'
    end: '(\\{)([^\\}]*)(\\})'
    name: 'meta.class.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.arguments.begin.latex'
      '2':
        name: 'entity.name.class.latex'
      '3':
        name: 'punctuation.definition.class.arguments.end.latex'
    patterns: [
      {
        include: '#optionalArguments'
      }
    ]
  }
  {# Includes\Require Declaration. TODO: Add listings includes.
    begin: '(\\\\(?:usepackage|includegraphics|include|input|nobibliography|bibliography|listinginput\\{[\\s\\w]+\\}))'
    end: '(\\{)([^\\}]*)(\\})'
    name: 'meta.require.include.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.require.begin.latex'
      '2':
        name: 'entity.meta.link.latex'
      '3':
        name: 'punctuation.definition.require.end.latex'
    patterns: [
      {
        include: '#optionalArguments'
      }
    ]
  }
  {# Inline verbatims
    begin: '(\\\\verb)(\\W)'
    end: '(\\2)'
    name: 'meta.verbatim.inline.latex'
  }
  {# Multiline comments
    begin: '(\\\\begin\\{(?:comment)\\})'
    end: '(\\\\end\\{(?:comment)\\})'
    name: 'comment.multiline.latex'
  }
  {# Multiline verbatim. TODO: Add support for other verbatim like enivironments.
    begin: '(\\\\begin\\{(?:verbatim)\\})'
    end: '(\\\\end\\{(?:verbatim)\\})'
    name: 'meta.verbatim.multiline.latex'
  }
  {# Environments
    begin: '(\\\\begin)(\\{)(\\w*\\*?)(\\})'
    end: '(\\\\end)(\\{)(\\3)(\\})'
    beginCaptures:
      '1':
        name: 'support.function.environment.latex'
      '2':
        name: 'punctuation.support.function.arguments.begin.latex'
      '3':
        name: 'entity.name.environment.latex'
      '4':
        name: 'punctuation.support.function.arguments.end.latex'
    endCaptures:
      '1':
        name: 'support.function.environment.latex'
      '2':
        name: 'punctuation.support.function.arguments.begin.latex'
      '3':
        name: 'entity.name.environment.latex'
      '4':
        name: 'punctuation.support.function.arguments.end.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Commands that disable spell cheking. One argument.
    begin: '(?<=\\\\author|\\\\alph|\\\\Alph|\\\\bibentry|\\\\cite|\\\\color|\\\\label|\\\\newcounter|\\\\pagestyle|\\\\ref|\\\\pageref|\\\\setcounter|\\\\thispagestyle|\\\\url)(\\{)'
    end: '(\\})'
    contentName: 'variable.parameter.function.latex'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
  }
  {# Commands that disable spell cheking. Two arguments.
    begin: '(?<=\\\\multicolumn\\{\\d\\})(\\{)'
    end: '(\\})'
    contentName: 'variable.parameter.function.latex'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
  }
  {# tabular aligments
    begin: '(?<=\\\\begin\\{tabular\\})(\\{)'
    end: '(\\})'
    contentName: 'variable.parameter.function.latex'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# tabularx aligments
    begin: '(?<=\\\\begin\\{tabularx\\})(\\{[^\\}]*\\})(\\{)'
    end: '(\\})'
    contentName: 'variable.parameter.function.latex'
    beginCaptures:
      '1':
        patterns: [
          include: '$self'
        ]
      '2':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Headings
    # TODO: Add support for subsubsectioning and subparagraphs
    begin: '(\\\\(?:title|part|chapter|section|subsection|paragraph))(?=\\W)'
    end: '(?<=\\})'
    contentName: 'entity.name.section.latex'
    beginCaptures:
      '1':
        name: 'support.function.section.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# Delimeter
    include: '#delimeter'
  }
  {# Generic commands
    include: '#command'
  }
  { # \psset{...}
    include: '#pstricksArguments'
  }
  {# (...), [...), (...], [...]
    begin: '(\\(|\\[)'
    end: '(\\)|\\])'
    beginCaptures:
      '1':
        name: 'punctuation.definition.string.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.string.end.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  { # [...]
    include: '#optionalArguments'
  }
  {# {...bold...}
    begin: '(?<=\\\\textbf|\\\\mathbf)(\\{)'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    end: '(\\})'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
    contentName: 'markup.bold.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# {...italic...}
    begin: '(?<=\\\\textit|\\\\emph)(\\{)'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    end: '(\\})'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
    contentName: 'markup.italic.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# {...}
    begin: '(\\{)'
    end: '(\\})'
    beginCaptures:
      '1':
        name: 'punctuation.support.function.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.support.function.arguments.end.latex'
    patterns: [
      {
        include: '$self'
      }
    ]
  }
  {# & -
    name: 'punctuation.definition.array.latex'
    match: '([&-\\.,])'
  }
]
repository:
  lengths:
    match: '((?:\\d+\\.)?\\d+)(pt|px|ex|em|in|mm|cm)'
    captures:
      '1':
        name: 'constant.numeric.latex'
      '2':
        name: 'constant.keyword.unit.latex'
  escapedChar:
    name: 'constant.character.escape.latex'
    match: '(\\\\)([%\\$\\{\\}\\\\])'
    # TODO: Add more symbols.
  inlineComments:
    name: 'comment.inline.latex'
    begin: '(%)'
    end: '(\\n)'
    beginCaptures:
      '1':
        name: 'punctuation.definition.comment.latex'
    patterns: [
      {
        match: '!TEX'
        name: 'storage.latex'
      }
      {
        include: 'text.todo'
      }
    ]
  pstricksArguments:
    begin: '(?<=\\\\psset)(\\{)'
    end: '(\\})'
    name: 'optional.arguments.latex'
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.optional.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.optional.arguments.end.latex'
    patterns: [
      {
        include: '#inlineComments'
      }
      {
        include: '#argsKeyName'
      }
      {
        include: '#lengths'
      }
      {
        include: '#argsName'
      }
      {
        match: '(,)'
        name: 'punctuation.definition.class.optional.arguments.latex'
      }
    ]
  optionalArguments:
    begin: '(\\[)'
    end: '(\\])'
    name: 'optional.arguments.latex'
    beginCaptures:
      '1':
        name: 'punctuation.definition.class.optional.arguments.begin.latex'
    endCaptures:
      '1':
        name: 'punctuation.definition.class.optional.arguments.end.latex'
    patterns: [
      {
        include: '#inlineComments'
      }
      {
        include: '#lengths'
      }
      {
        include: '#argsKeyName'
      }
      {
        include: '#argsName'
      }
      {
        match: '(,)'
        name: 'punctuation.definition.class.optional.arguments.latex'
      }
    ]
  argsKeyName:
    name: 'support.type.latex'
    match: '(\\w+(\\s)?=(\\s)?)'
  argsName:
    name: 'entity.name.class.latex'
    match: '(\\w+)'
  command:
    match: '(\\\\[a-zA-Z@]+)'
    name: 'support.function.latex'
  subsuper:
    match: '(_|\\^)'
    name: 'support.function.latex'
  delimeter:
    match: '(\\\\left\\[|\\\\right\\])'
    name: 'support.function.latex'
scopeName: 'text.tex.latex'
